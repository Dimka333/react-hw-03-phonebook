{"version":3,"sources":["Component/ContactItem/ContactItem.module.scss","Component/Filter/Filter.module.scss","Component/Container/Container.module.scss","Component/ContactList/ContactList.module.scss","Component/ContactForm/ContactForm.module.scss","Component/Container/Container.js","Component/Section/Section.js","Component/ContactForm/ContactForm.js","Component/ContactItem/ContactItem.js","Component/ContactList/ContactList.js","Component/Filter/Filter.js","App.js","index.js","Component/Section/Section.module.scss"],"names":["module","exports","Container","children","className","styles","container","Section","title","section","ContactForm","state","name","number","handleChangeForm","e","currentTarget","value","setState","handleSubmitForm","preventDefault","props","onSubmitData","reset","onSubmit","this","label","input","type","onChange","pattern","required","button","Component","ContactItem","id","onClick","item","ContactList","list","map","Filter","App","contacts","filter","syncLocalStorage","localStorage","setItem","JSON","stringify","addContact","find","el","alert","contact","shortid","generate","filterChange","formSubmitData","data","console","log","handleVisibleContacts","normalizedFilter","toLocaleLowerCase","includes","deleteContact","contactID","prevState","getItem","parse","PureComponent","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aeac3186.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__1hb9o\",\"button\":\"ContactItem_button__3q2EG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__HH-9E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__N7jKX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2YLj3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3AJ7D\",\"label\":\"ContactForm_label__1lT0S\",\"button\":\"ContactForm_button__1QzyL\"};","import styles from './Container.module.scss'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={styles.container}>{children}</div>\r\n)\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.object]).isRequired\r\n};\r\n\r\nexport default Container;","import styles from './Section.module.scss'\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n    return (\r\n        <section className={styles.section}>\r\n            <h2 className={styles.title}>{title}</h2>\r\n            {children}\r\n        </section>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.array,\r\n        PropTypes.object]).isRequired\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.scss'\r\nimport { Component } from 'react'\r\n\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleChangeForm = e => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value})\r\n    }\r\n    \r\n    handleSubmitForm = e => {\r\n        e.preventDefault()\r\n        this.props.onSubmitData(this.state)\r\n        this.reset();\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmitForm}>\r\n                <label className={styles.label}>\r\n                    Name<input\r\n                    className={styles.input}\r\n                        type=\"text\"\r\n                        name='name'\r\n                        onChange={this.handleChangeForm}\r\n                        value={this.state.name} />\r\n                </label>\r\n                <label className={styles.label}>\r\n                 Number<input\r\n                 className={styles.input}\r\n                        type=\"tel\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleChangeForm}\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                    />\r\n                </label>\r\n                <button className={styles.button} type='submit'>Add contact</button>\r\n        </form>\r\n    )\r\n}\r\n}\r\n\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types'\r\nimport styles from './ContactItem.module.scss'\r\n\r\n\r\nconst ContactItem = ({ id, name, number, onClick }) => {\r\n    return (\r\n        <li className={styles.item}>{name}: {number}\r\n            <button className={styles.button} type='button' onClick={() =>\r\n                onClick(id)}>Delete</button></li>\r\n       \r\n    )\r\n}\r\n\r\nContactItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ContactItem;","import PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.scss';\r\nimport ContactItem from '../ContactItem/'\r\n\r\n\r\nconst ContactList = ({ list, onClick }) => {\r\n\r\n    return (\r\n        <ul className={styles.list}>\r\n            {list.map(item => (\r\n                <ContactItem\r\n                    key={item.id}\r\n                    id={item.id}\r\n                    name={item.name}\r\n                    number={item.number}\r\n                    onClick={onClick}/>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContactList.propTypes = {\r\n    list : PropTypes.array.isRequired,\r\n}\r\n\r\nexport default ContactList;","import styles from './Filter.module.scss'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={styles.label}>\r\n        Find contacts by name\r\n        <input className={styles.input} type=\"text\" value={value} onChange={onChange} />\r\n    </label>\r\n);\r\n\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Filter;  ","import { PureComponent } from 'react';\nimport Container from './Component/Container';\nimport Section from './Component/Section';\nimport ContactForm from './Component/ContactForm';\nimport ContactList from './Component/ContactList';\nimport Filter from './Component/Filter';\nimport shortid from 'shortid';\n\nclass App extends PureComponent {\n  state = {\n    contacts: [],\n    filter: '',\n\n  }\n\n  componentDidMount() {\n    console.log('componenDidMount');\n    let contacts = localStorage.getItem('contacts');\n    if (contacts) {\n      contacts = JSON.parse(contacts);\n      this.setState({ contacts: contacts})\n    }\n  } \n\n  syncLocalStorage = () => {\n    localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\n  }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     console.log('obnova');\n//     if (this.state.contacts !== prevState.contacts) {\n// }\n//   };\n  \n  addContact = ({ name, number }) => {\n\n    if (this.state.contacts.find((el) => el.name === name)) {\n      alert(`${name} is already in contacts`);\n      return;\n    } \n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    \n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }),() => {this.syncLocalStorage()} );\n  };\n \n  filterChange = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n  \n  \n\n  formSubmitData = data => {\n    console.log(data);\n    this.addContact(data)\n  }\n\n  handleVisibleContacts = () => {\n    const normalizedFilter = this.state.filter.toLocaleLowerCase();\n    \n    return (\n     this.state.contacts.filter(contact => \n     contact.name.toLocaleLowerCase().includes(normalizedFilter))\n    )\n  }\n\n  deleteContact = (contactID) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactID\n      )\n    }),() => {this.syncLocalStorage()})\n  };\n \n\n   \n\n  render() {\n    return (\n      <Container>\n        <Section title={'Phonebook'}>\n          <ContactForm onSubmitData={this.formSubmitData}/>\n        </Section> \n        <Section title={'Contacts'}>\n          <Filter\n            value={this.state.filter}\n            onChange={this.filterChange}\n          />\n          <ContactList\n            list={this.handleVisibleContacts()}\n            onClick={this.deleteContact}/>\n        </Section>\n    </Container>\n  )\n}\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__2fOTN\"};"],"sourceRoot":""}